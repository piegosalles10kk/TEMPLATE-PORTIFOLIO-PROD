version: '3.8'

services:
  # ----------------------------------------
  # 1. SERVIÇO DO MONGODB
  # ----------------------------------------
  mongo-db:
    image: mongo:4.4
    container_name: mongodb_data
    restart: always
    
    environment:
      MONGO_INITDB_ROOT_USERNAME: userroot
      MONGO_INITDB_ROOT_PASSWORD: senhasegura
      MONGO_INITDB_DATABASE: portifolio_db
      
    volumes:
      # Volume para persistência de dados
      - mongodb_data:/data/db

  # ----------------------------------------
  # 2. SERVIÇO DO BACKEND (Node.js/Express)
  # ----------------------------------------
  backend:
    build: 
      context: ./backend # Caminho para a pasta do seu backend
      dockerfile: Dockerfile
    container_name: portifolio_backend
    restart: always
    
    # Porta exposta para o host (para o navegador chamar via localhost:2100)
    ports:
      - "2100:2100" 
      
    environment:
      # O host é o nome do serviço Docker Compose: 'mongo-db'
      MONGO_URI: mongodb://userroot:senhasegura@mongo-db:27017/portifolio_db?authSource=admin
      PORT: 2100

    # Adiciona a dependência para garantir que o banco de dados comece a subir primeiro
    depends_on:
      - mongo-db 
      
  # ----------------------------------------
  # 3. SERVIÇO DO FRONTEND (React + Serve)
  # ----------------------------------------
  frontend:
    # O 'context' aponta para a pasta onde está seu Dockerfile do React (public)
    build: 
      context: ./public 
      dockerfile: Dockerfile
    container_name: portifolio_frontend
    restart: always
    
    # Mapeia a porta 3050 do container para a porta 3050 do seu computador
    ports:
      - "3050:3050" 
      
    # O frontend DEVE esperar que o backend esteja funcionando para começar a fazer requisições
    depends_on:
      - backend

# ----------------------------------------
# VOLUMES
# ----------------------------------------
volumes:
  mongodb_data:
    driver: local